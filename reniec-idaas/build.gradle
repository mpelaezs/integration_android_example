apply plugin: 'com.android.library'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled project.minifyDebug
        }

        release {
            minifyEnabled project.minifyRelease
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jvmArgs '-XX:MaxPermSize=256m'
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.appcompatV7
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.9'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
